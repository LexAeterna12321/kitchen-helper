{"version":3,"sources":["axiosConfig/unsplashAPI.js","components/Loader/index.tsx","components/Button/index.tsx","components/AddIngredient/index.tsx","store/types.ts","components/Timers/Timer.tsx","components/AddTiming/index.tsx","components/Timers/TimerList.tsx","components/TimersSummary/index.tsx","components/Counter/index.tsx","components/Bar/index.tsx","components/Dashboard/index.tsx","store/appReducer.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["axios","create","baseURL","headers","Authorization","LoaderComp","_ref","type","color","height","width","react_default","a","createElement","react_loader_spinner_default","button","style","background","boxShadow","border","margin","padding","textTransform","opacity","cursor","$nest","&:hover","changingButtonAnim","keyframes","0%","50%","100%","animatedButton","animationName","animationDuration","animationIterationCount","animationFillMode","buttonDisabled","Button","value","disabled","changeSteps","step","animated","ingrName","className","onClick","uuidv4","require","inputRef","React","createRef","labelError","container","display","flexDirection","alignItems","justifyContent","form","& input","fontSize","textAlign","letterSpacing","outline","h2","AddIngredient","_useState","useState","ingrImg","_useState2","Object","slicedToArray","ingredient","setIngredient","_useContext","useContext","Context","store","dispatch","_useState3","_useState4","error","setError","_useState5","_useState6","imgLoaded","setImgLoaded","_useState7","_useState8","isFetching","setIsFetching","fetchIngrImg","_ref2","asyncToGenerator","regenerator_default","mark","_callee","raw","image","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","urls","small","abrupt","stop","_x","apply","this","arguments","onSubmit","e","preventDefault","timers","length","id","then","payload","current","focus","catch","addIng","ref","autoFocus","name","onChange","objectSpread","currentTarget","setIng","htmlFor","components_Button","Loader","li","listStyleType","position","top","left","overflow","span","zIndex","imgWrapper","img","objectFit","objectPosition","Timer","time","concat","src","alt","_colors","p","maxWidth","minWidth","& button","&:focus","& label","media","buttons","flexWrap","deleteButton","AddTiming","handleChange","uniqueColor","colorA","Math","floor","random","some","timer","updatedTimers","map","t","validateTimers","find","undefined","useEffect","key","Timers_Timer","defaultValue","filter","deleteIngr","ul","gridTemplateColumns","gridGap","justifyItems","TimerList","TimersSummary","props","Timers_TimerList","default","counter","Counter","timerStatus","setTimerStatus","currTime","setCurrTime","_vibrationPattern","start","on","ms","window","navigator","vibrate","colorIndicator","justifySelf","timeBF","toFixed","showFormattedTime","ProgressBar","Bar","strokeWidth","circle","Circle","duration","parseInt","easing","state","bar","attachment","path","setAttribute","opts","from","to","animate","transform","borderRadius","bottom","Dashboard","appReset","storeSortedByTime","split","timeFormatted","parseFloat","sort","b","components_Bar","components_Counter","right","initialState","appReducer","action","toConsumableArray","createContext","App","_useReducer","useReducer","_useReducer2","setState","sign","Provider","components_AddIngredient","components_AddTiming","components_TimersSummary","components_Dashboard","renderSteps","Boolean","location","hostname","match","ReactDOM","react","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cc22b3c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// const { UNSPLASH_API_KEY } = process.env;\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization:\r\n      \"Client-ID c1eab98eb55a7d338cc759f8ecd048f78ae4ac321f553d5d68d902a360e998f6\"\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\ninterface ILoader {\r\n  type: string;\r\n  color: string;\r\n  height: string;\r\n  width: string;\r\n}\r\nexport const LoaderComp = ({ type, color, height, width }: ILoader) => (\r\n  <Loader type={type} color={color} height={height} width={width} />\r\n);\r\n\r\nexport default LoaderComp;\r\n","import React from \"react\";\r\nimport { style, keyframes } from \"typestyle\";\r\ninterface IProps {\r\n  value: string | JSX.Element;\r\n  disabled?: boolean;\r\n  step?: string;\r\n  changeSteps?: any;\r\n  animated?: boolean;\r\n  ingrName?: string;\r\n}\r\n\r\nconst Button = ({\r\n  value,\r\n  disabled,\r\n  changeSteps,\r\n  step,\r\n  animated,\r\n  ingrName\r\n}: IProps): JSX.Element => {\r\n  if (animated) {\r\n    if (disabled && !ingrName) {\r\n      return <button className={buttonDisabled}>{value}</button>;\r\n    } else if (ingrName) {\r\n      return <button className={button}>{value}</button>;\r\n    } else {\r\n      return (\r\n        <button disabled className={animatedButton}>\r\n          {value}\r\n        </button>\r\n      );\r\n    }\r\n  } else {\r\n    return disabled ? (\r\n      <button disabled className={buttonDisabled}>\r\n        {value}\r\n      </button>\r\n    ) : (\r\n      <button onClick={() => changeSteps(step)} className={button}>\r\n        {value}\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport const button: string = style({\r\n  background: \"lightblue\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  opacity: 0.8,\r\n  cursor: \"pointer\",\r\n  $nest: {\r\n    \"&:hover\": {\r\n      opacity: 1\r\n    }\r\n  }\r\n});\r\n\r\nconst changingButtonAnim = keyframes({\r\n  \"0%\": { background: \"lightblue\" },\r\n  \"50%\": { background: \"#33ba57\", opacity: 0.8 },\r\n  \"100%\": { background: \"#33cc57\", opacity: 1 }\r\n});\r\n\r\nconst animatedButton = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightblue\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"default\",\r\n  animationName: changingButtonAnim,\r\n  animationDuration: \"1.5s\",\r\n  animationIterationCount: \"1\",\r\n  animationFillMode: \"both\"\r\n});\r\nconst buttonDisabled = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightgrey\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"not-allowed\"\r\n});\r\nexport default Button;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../../App\";\r\nimport unsplash from \"../../axiosConfig/unsplashAPI\";\r\nimport { style, keyframes } from \"typestyle\";\r\nimport { ADD_INGR } from \"../../store/types\";\r\nconst uuidv4 = require(\"uuid/v4\");\r\nimport Loader from \"../Loader\";\r\nimport Button from \"../Button\";\r\ntype AddIngredientProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst inputRef: any = React.createRef();\r\nconst AddIngredient = ({ changeSteps }: AddIngredientProps): JSX.Element => {\r\n  const [ingredient, setIngredient] = useState<any>({\r\n    ingrName: \"\",\r\n    ingrImg: \"\"\r\n  });\r\n  const { ingrName } = ingredient;\r\n  const { store, dispatch }: any = useContext(Context);\r\n  const [error, setError] = useState(\"\");\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const setIng = (e: React.SyntheticEvent<HTMLInputElement>) => {\r\n    setImgLoaded(false);\r\n    setIngredient({ ...ingredient, ingrName: e.currentTarget.value });\r\n  };\r\n\r\n  const fetchIngrImg = async (ingrImg: string) => {\r\n    setIsFetching(true);\r\n    const raw = await unsplash.get(`/search/photos`, {\r\n      params: {\r\n        query: ingrImg\r\n      }\r\n    });\r\n\r\n    let image = raw.data.results[0].urls.small;\r\n    return image;\r\n  };\r\n\r\n  const addIng = (e: React.SyntheticEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!ingrName) {\r\n      setImgLoaded(false);\r\n      setError(\"You have to type your ingredient first\");\r\n      return;\r\n    } else if (store.timers.length > 5) {\r\n      setError(\"You have reached maximum amount of ingredients\");\r\n      return;\r\n    }\r\n    ingredient.id = uuidv4();\r\n\r\n    fetchIngrImg(ingredient.ingrName)\r\n      .then(image => {\r\n        ingredient.ingrImg = image;\r\n      })\r\n      .then(() => {\r\n        setError(\"\");\r\n        setImgLoaded(true);\r\n        dispatch({ type: ADD_INGR, payload: ingredient });\r\n      })\r\n      .then(() => {\r\n        setIsFetching(false);\r\n        inputRef.current.focus();\r\n        setIngredient({ ingrName: \"\", ingrImg: \"\" });\r\n      })\r\n      .catch(() => {\r\n        setError(\"Ingredient is not in a base, try with another search\");\r\n        setImgLoaded(false);\r\n        setIsFetching(false);\r\n        inputRef.current.focus();\r\n      });\r\n  };\r\n  const buttonFetchingChanges = () => {\r\n    if (isFetching)\r\n      return (\r\n        <Loader type=\"ThreeDots\" color=\"#44bd32\" height=\"15\" width=\"130\" />\r\n      );\r\n    else if (imgLoaded) return \"Ingredient Added\";\r\n    else return \"Add Ingredient\";\r\n  };\r\n\r\n  return (\r\n    <div className={container}>\r\n      <h1 className={h2}>Add Your Ingredients</h1>\r\n      <form onSubmit={e => addIng(e)} className={form}>\r\n        <input\r\n          ref={inputRef}\r\n          disabled={isFetching ? true : false}\r\n          autoFocus\r\n          type=\"text\"\r\n          name=\"field\"\r\n          onChange={e => setIng(e)}\r\n          value={ingrName}\r\n        />\r\n        <label htmlFor=\"field\" className={error ? labelError : \"\"}>\r\n          {error ? error : \"Type your ingredient Here (MAX: 6)\"}\r\n        </label>\r\n        <p>\r\n          Added ingredients: <span>{store.timers.length}</span>\r\n        </p>\r\n        <Button\r\n          value={buttonFetchingChanges()}\r\n          disabled={!imgLoaded ? true : false}\r\n          animated={true}\r\n          ingrName={ingrName}\r\n        />\r\n      </form>\r\n      {store.timers.length !== 0 ? (\r\n        <Button value=\"Next step\" changeSteps={changeSteps} step=\"+\" />\r\n      ) : (\r\n        <Button\r\n          value=\"Next step\"\r\n          changeSteps={changeSteps}\r\n          step=\"+\"\r\n          disabled={true}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst labelError = style({\r\n  color: \"red\"\r\n});\r\n\r\nconst container = style({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\"\r\n});\r\nconst form = style({\r\n  width: \"90%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  $nest: {\r\n    \"& input\": {\r\n      width: \"50%\",\r\n      background: \"rgba(0,0,0,.3)\",\r\n      fontSize: \"2rem\",\r\n      border: \"none\",\r\n      margin: \" 10px 0\",\r\n      textAlign: \"center\",\r\n      letterSpacing: \"3px\",\r\n      color: \"white\",\r\n      outline: \"none\"\r\n    }\r\n  }\r\n});\r\n\r\nconst h2 = style({\r\n  padding: \"0 10px\"\r\n});\r\n\r\nconst changingButtonAnim = keyframes({\r\n  \"0%\": { background: \"lightblue\" },\r\n  \"50%\": { background: \"#33ba57\", opacity: 0.8 },\r\n  \"100%\": { background: \"#33cc57\", opacity: 1 }\r\n});\r\n\r\nconst animatedButton = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightblue\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"pointer\",\r\n  animationName: changingButtonAnim,\r\n  animationDuration: \"1.5s\",\r\n  animationIterationCount: \"1\",\r\n  animationFillMode: \"both\"\r\n});\r\n\r\nexport default AddIngredient;\r\n","export const ADD_INGR = \"ADD_INGR\";\r\nexport const ADD_TIME = \"ADD_TIME\";\r\nexport const DEL_TIME = \"DEL_TIME\";\r\n","import React from \"react\";\r\nimport { style } from \"typestyle\";\r\n\r\nconst Timer = ({ ingredient }: any): JSX.Element => {\r\n  const { ingrName, ingrImg, time } = ingredient;\r\n  return (\r\n    <li className={li}>\r\n      <span className={span}>\r\n        {ingrName} {time ? `| ${time}` : \"\"}\r\n      </span>\r\n      <div className={imgWrapper}>\r\n        <img className={img} src={ingrImg} alt=\"ingredient\" />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nconst li = style({\r\n  listStyleType: \"none\",\r\n  position: \"relative\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  width: \"300px\",\r\n  height: \"300px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  overflow: \"hidden\",\r\n  margin: \"20px auto\"\r\n});\r\n\r\nconst span = style({\r\n  fontSize: \"2rem\",\r\n  letterSpacing: \"2px\",\r\n  zIndex: 2,\r\n  textTransform: \"uppercase\",\r\n  color: \"white\",\r\n  background: \"rgba(0,0,0,0.2)\",\r\n  padding: \"10px\"\r\n});\r\nconst imgWrapper = style({\r\n  width: \"100%\",\r\n  position: \"absolute\"\r\n});\r\n\r\nconst img = style({\r\n  width: \"300px\",\r\n  height: \"300px\",\r\n  objectFit: \"cover\",\r\n  objectPosition: \"center\"\r\n});\r\n\r\nexport default Timer;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context, ITimer } from \"../../App\";\r\nimport { ADD_TIME, DEL_TIME } from \"../../store/types\";\r\nimport { style, media } from \"typestyle\";\r\nimport Timer from \"../Timers/Timer\";\r\nimport Button from \"../Button\";\r\ntype AddTimingProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst _colors = [\r\n  \"#f6b93b\",\r\n  \"#b71540\",\r\n  \"#6a89cc\",\r\n  \"#82ccdd\",\r\n  \"#38ada9\",\r\n  \"#808e9b\"\r\n];\r\n\r\nconst getRandColor = (): string => {\r\n  return _colors[Math.floor(Math.random() * _colors.length - 1) + 1];\r\n};\r\n\r\nconst AddTiming = ({ changeSteps }: AddTimingProps) => {\r\n  const { dispatch, store }: any = useContext(Context);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (\r\n    e: React.SyntheticEvent<HTMLInputElement>,\r\n    id: string\r\n  ) => {\r\n    const uniqueColor = (): any => {\r\n      const colorA = getRandColor();\r\n      const alreadyPicked = store.timers.some((timer: any) => {\r\n        return timer.color === colorA;\r\n      });\r\n      if (!alreadyPicked) {\r\n        return colorA;\r\n      } else {\r\n        return uniqueColor();\r\n      }\r\n    };\r\n    const updatedTimers = store.timers.map((t: ITimer) => {\r\n      if (t.id === id) {\r\n        t.time = e.currentTarget.value;\r\n      }\r\n      if (!t.color) {\r\n        t.color = uniqueColor();\r\n      }\r\n      return t;\r\n    });\r\n    validateTimers();\r\n    dispatch({ type: ADD_TIME, payload: updatedTimers });\r\n  };\r\n  const deleteIngr = (e: React.SyntheticEvent, id: string) => {\r\n    const updatedTimers = store.timers.filter((t: ITimer) => t.id !== id);\r\n    dispatch({ type: DEL_TIME, payload: updatedTimers });\r\n    validateTimers();\r\n  };\r\n  // after ingredients deletion checks if changingSteps is needed\r\n  if (store.timers.length === 0) changeSteps(\"-\");\r\n\r\n  const validateTimers = () => {\r\n    const invalidTimer = store.timers.find((timer: ITimer) => {\r\n      return timer.time === \"00:00\" || timer.time === undefined;\r\n    });\r\n    if (invalidTimer) {\r\n      return setError(\r\n        \"In order to proceed fill all your timers (time 00:00 is invalid)\"\r\n      );\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n  };\r\n  useEffect(\r\n    (): any => {\r\n      validateTimers();\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add Your Timings</h1>\r\n      {store.timers.map((timer: ITimer) => {\r\n        const id = timer.id;\r\n\r\n        return (\r\n          <div className={container} key={id}>\r\n            <Timer ingredient={{ ...timer }} />\r\n            <form className={form}>\r\n              <label htmlFor=\"time\">Your Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                onChange={e => handleChange(e, id)}\r\n                defaultValue={timer.time}\r\n                style={{ background: \"rgba(0,0,0,0.3)\", outline: \"none\" }}\r\n              />\r\n              <button\r\n                className={deleteButton}\r\n                style={{ color: \"#ff7777\" }}\r\n                type=\"button\"\r\n                onClick={e => deleteIngr(e, id)}\r\n              >\r\n                Delete Ingredient\r\n              </button>\r\n            </form>\r\n          </div>\r\n        );\r\n      })}\r\n      <p className={p}>{error ? error : \"\"}</p>\r\n      <div className={buttons}>\r\n        <Button changeSteps={changeSteps} step=\"-\" value=\"Prev step\" />\r\n        <Button\r\n          changeSteps={changeSteps}\r\n          step=\"+\"\r\n          value=\"Next step\"\r\n          disabled={error ? true : false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst container = style({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n});\r\n\r\nconst p = style({\r\n  height: \"40px\",\r\n  padding: \"20px 0\",\r\n  margin: \"20px 10px\"\r\n});\r\n\r\nconst form = style(\r\n  {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"90vw\",\r\n    minWidth: \"50vw\",\r\n    margin: \"0 auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    background: \"rgba(0,0,0,0.2)\",\r\n\r\n    $nest: {\r\n      \"& button\": {\r\n        padding: \"15px\",\r\n        display: \"block\"\r\n      },\r\n      \"& input\": {\r\n        width: \"75%\",\r\n        fontSize: \"2rem\",\r\n        boxShadow: \"none\",\r\n        border: \"none\",\r\n        margin: \"10px auto\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        $nest: {\r\n          \"&:focus\": {\r\n            background: \"lightblue\"\r\n          }\r\n        }\r\n      },\r\n      \"& label\": {\r\n        color: \"white\"\r\n      }\r\n    }\r\n  },\r\n  media({ maxWidth: 600 }, { maxWidth: \"100%\" })\r\n);\r\n\r\nconst buttons = style({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\"\r\n});\r\nconst deleteButton = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightblue\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"pointer\",\r\n  opacity: 0.8,\r\n  $nest: {\r\n    \"&:hover\": {\r\n      opacity: 1\r\n    }\r\n  }\r\n});\r\n\r\nexport default AddTiming;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../App\";\r\nimport Timer from \"./Timer\";\r\nimport { style } from \"typestyle\";\r\nconst TimerList: React.SFC = () => {\r\n  const { store }: any = useContext(Context);\r\n  return (\r\n    <ul className={ul}>\r\n      {store.timers.map((timer: any) => {\r\n        return <Timer key={timer.id} ingredient={timer} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nconst ul = style({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\r\n  gridGap: \"20px\",\r\n  justifyItems: \"center\"\r\n});\r\nexport default TimerList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport TimerList from \"../Timers/TimerList\";\r\nimport { button } from \"../Button\";\r\nimport { Context, ITimer } from \"../../App\";\r\ntype TimersSummaryProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst TimersSummary = (props: TimersSummaryProps) => {\r\n  const { changeSteps } = props;\r\n  const { store }: any = useContext(Context);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const checkForTimers = () => {\r\n    const timersTimeNotFound = store.timers.find((timer: ITimer) => {\r\n      return timer.time === undefined;\r\n    });\r\n\r\n    if (timersTimeNotFound) {\r\n      setError(\"You must pick all your timers before cooking\");\r\n      return;\r\n    } else if (store.timers.length === 0) {\r\n      setError(\"You must add ingredients and timers before cooking\");\r\n      return;\r\n    } else {\r\n      setError(\"\");\r\n      changeSteps(\"+\");\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <h1>Timers Summary</h1>\r\n      <TimerList />\r\n      <button className={button} onClick={() => changeSteps(\"-\")}>\r\n        Prev Step\r\n      </button>\r\n      <button\r\n        className={button}\r\n        style={{ background: \"#78e08f\" }}\r\n        onClick={checkForTimers}\r\n      >\r\n        Let's Cook\r\n      </button>\r\n      {error ? <h3 style={{ color: \"#ff7777\" }}>{error}</h3> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimersSummary;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { style } from \"typestyle\";\r\nconst Timer = require(\"tiny-timer\").default;\r\n\r\ninterface ICounterProps {\r\n  time: number;\r\n  color: string;\r\n  ingrName: string;\r\n}\r\nconst Counter = ({ time, color, ingrName }: ICounterProps): JSX.Element => {\r\n  const [timerStatus, setTimerStatus] = useState(\"\");\r\n  const [currTime, setCurrTime] = useState(time);\r\n  const timer = new Timer();\r\n\r\n  const _vibrationPattern = [\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000\r\n  ];\r\n  useEffect(() => {\r\n    // Timer handler\r\n    timer.start(time * 1000, [1000]);\r\n    timer.on(\"tick\", (ms: number) => {\r\n      setCurrTime(timer.time);\r\n    });\r\n    timer.on(\"done\", () => {\r\n      setTimerStatus(\"DONE!\");\r\n      window.navigator.vibrate(_vibrationPattern);\r\n    });\r\n    return () => {\r\n      timer.stop();\r\n    };\r\n  }, []);\r\n\r\n  const colorIndicator = style({\r\n    margin: \"0 10px\",\r\n    background: color,\r\n    width: \"3.8vmin\",\r\n    height: \"3vmin\"\r\n  });\r\n\r\n  const showFormattedTime = () => {\r\n    const timeBF = currTime / 1000;\r\n    const timeFormatted = `${Math.floor(timeBF / 60).toFixed(0)} min ${(\r\n      timeBF % 60\r\n    ).toFixed(0)} sec`;\r\n    return timeFormatted;\r\n  };\r\n\r\n  const stopVibrations = (): void => {\r\n    timerStatus === \"DONE!\" ? window.navigator.vibrate(0) : null;\r\n  };\r\n\r\n  const p = style({\r\n    color: color,\r\n    justifySelf: \"center\",\r\n    fontSize: \"3.8vmin\",\r\n    textTransform: \"capitalize\"\r\n  });\r\n\r\n  return (\r\n    <div className={counter} onClick={stopVibrations}>\r\n      <div className={colorIndicator} />\r\n      <p className={p}>\r\n        {ingrName} : {!timerStatus ? showFormattedTime() : timerStatus}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nconst counter = style({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"1fr 8fr\",\r\n  gridGap: \"10px\",\r\n  margin: \"10px auto\",\r\n  alignItems: \"baseline\",\r\n  width: \"50vmin\"\r\n});\r\n\r\nexport default Counter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { style } from \"typestyle\";\r\nconst ProgressBar = require(\"progressbar.js\");\r\n\r\ninterface IBarProps {\r\n  color?: string;\r\n  time: string;\r\n  strokeWidth: number;\r\n  zIndex: number;\r\n}\r\nconst Bar = ({ color, time, strokeWidth, zIndex }: IBarProps): JSX.Element => {\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      const circle = new ProgressBar.Circle(ref.current, {\r\n        duration: parseInt(time) * 1000,\r\n        easing: \"linear\",\r\n        strokeWidth: strokeWidth,\r\n        step: function(state: any, bar: any, attachment: any) {\r\n          bar.path.setAttribute(\"stroke\", state.color);\r\n        }\r\n      });\r\n\r\n      const opts = {\r\n        from: { color: color },\r\n        to: { color: color }\r\n      };\r\n\r\n      circle.animate(1, opts);\r\n    }\r\n  }, []);\r\n\r\n  const ref: any = React.createRef();\r\n\r\n  const bar = style({\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    width: \"90vmin\",\r\n    height: \"90vmin\",\r\n    zIndex: zIndex,\r\n    boxShadow: \"0 0 3px 3px rgba(255,255,255,0.2)\",\r\n    borderRadius: \"50%\"\r\n  });\r\n\r\n  return <div ref={ref} className={bar} />;\r\n};\r\n\r\nexport default Bar;\r\n","import React, { useContext } from \"react\";\r\nimport { style } from \"typestyle\";\r\nimport Counter from \"../Counter\";\r\nimport Bar from \"../Bar\";\r\nimport { Context, ITimer } from \"../../App\";\r\nimport { button } from \"../Button\";\r\nconst Dashboard = ({ appReset }: { appReset: () => void }) => {\r\n  const { store }: any = useContext(Context);\r\n  let strokeWidth = 1;\r\n  let zIndex = 10;\r\n\r\n  // splitting time input from mins:secs to secs in order to pass it to timer functions\r\n  const timers = store.timers.map((timer: any) => {\r\n    const timeBF = timer.time.split(\":\");\r\n    const timeFormatted = parseFloat(timeBF[0]) * 60 + parseFloat(timeBF[1]);\r\n    return { ...timer, time: timeFormatted };\r\n  });\r\n\r\n  let storeSortedByTime = timers.sort((a: ITimer, b: ITimer) => {\r\n    return parseInt(a.time) > parseInt(b.time) ? 1 : -1;\r\n  });\r\n  return (\r\n    <div>\r\n      <div className={container}>\r\n        {storeSortedByTime.map(({ id, time, color }: ITimer) => {\r\n          return (\r\n            <Bar\r\n              key={id}\r\n              time={time}\r\n              strokeWidth={(strokeWidth += 2)}\r\n              zIndex={zIndex--}\r\n              color={color}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={container}>\r\n        {storeSortedByTime.map((timer: any) => {\r\n          return (\r\n            <Counter\r\n              key={timer.id}\r\n              time={timer.time}\r\n              ingrName={timer.ingrName}\r\n              color={timer.color}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        onClick={appReset}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"5%\",\r\n          right: \"5%\",\r\n          padding: \"10px 15px\"\r\n        }}\r\n        className={button}\r\n      >\r\n        Go Back To Main Panel\r\n      </button>\r\n      <p className={p}>\r\n        (When done, tap on the ingredient label to stop vibrations)\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst container = style({\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\",\r\n  width: \"50%\",\r\n  height: \"auto\"\r\n});\r\nconst p = style({\r\n  position: \"fixed\",\r\n  bottom: \"5%\",\r\n  left: \"50%\",\r\n  transform: \"translateX(-50%)\"\r\n});\r\nexport default Dashboard;\r\n","import { IAction } from \"../App\";\r\nimport { ITimer } from \"../App\";\r\nimport { ADD_INGR, ADD_TIME, DEL_TIME } from \"./types\";\r\nexport const initialState = {\r\n  timers: <ITimer | any>[]\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ADD_INGR:\r\n      return { ...state, timers: [...state.timers, action.payload] };\r\n    case ADD_TIME:\r\n      return { ...state, timers: action.payload };\r\n    case DEL_TIME:\r\n      return { ...state, timers: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useReducer } from \"react\";\nimport AddIngredient from \"./components/AddIngredient\";\nimport AddTiming from \"./components/AddTiming\";\nimport TimersSummary from \"./components/TimersSummary\";\nimport Dashboard from \"./components/Dashboard\";\nimport { appReducer, initialState } from \"./store/appReducer\";\nimport \"./App.css\";\n\nexport interface ITimer {\n  time: string;\n  ingrName: string;\n  ingrImg: string;\n  id: string;\n  color?: string;\n}\n\ninterface IAppState {\n  timers: ITimer[];\n  step: number;\n}\nexport interface IAction {\n  type: string;\n  payload: any;\n}\n\nexport const Context = React.createContext({});\n\nconst App = (): JSX.Element => {\n  const [store, dispatch] = useReducer(appReducer, initialState);\n  const [state, setState] = useState({ step: 1, timers: [] });\n  const { step } = state;\n\n  const appReset = () => {\n    window.navigator.vibrate(0);\n    setState({ timers: [], step: 1 });\n  };\n\n  const changeSteps = (sign: string): void => {\n    sign === \"+\"\n      ? setState(\n          (state: IAppState): any => ({\n            step: step + 1\n          })\n        )\n      : setState(\n          (state: IAppState): any => ({\n            step: step - 1\n          })\n        );\n  };\n\n  const renderSteps = (): JSX.Element => {\n    switch (step) {\n      case 1: {\n        return <AddIngredient changeSteps={changeSteps} />;\n      }\n      case 2: {\n        return <AddTiming changeSteps={changeSteps} />;\n      }\n      case 3: {\n        return <TimersSummary changeSteps={changeSteps} />;\n      }\n      case 4: {\n        return <Dashboard appReset={appReset} />;\n      }\n      default: {\n        return <AddIngredient changeSteps={changeSteps} />;\n      }\n    }\n  };\n\n  return (\n    <Context.Provider value={{ dispatch, store }}>\n      <div className=\"App\">\n        {step === 4 ? null : (\n          <header className=\"App-header\">\n            <p>Kitchen Helper</p>\n            <p>Precise Your Kitchen Timing </p>\n            <h4>Step {step}</h4>\n          </header>\n        )}\n        {renderSteps()}\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["axiosConfig/unsplashAPI.js","components/addIngredient/index.tsx","store/types.ts","components/dashboard/Timer.tsx","components/addTiming/index.tsx","components/dashboard/TimerList.tsx","components/timersSummary/index.tsx","components/Counter/index.tsx","components/Bar/index.tsx","components/dashboard/index.tsx","store/appReducer.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["axios","create","baseURL","headers","Authorization","uuidv4","require","labelError","style","color","container","display","flexDirection","alignItems","justifyContent","form","width","$nest","& input","background","fontSize","border","margin","textAlign","letterSpacing","outline","button","_ref3","cursor","boxShadow","padding","textTransform","opacity","&:hover","h2","changingButtonAnim","keyframes","0%","50%","100%","animatedButton","animationName","animationDuration","animationIterationCount","animationFillMode","AddIngredient","_ref","changeSteps","_useState","useState","ingrName","ingrImg","_useState2","Object","slicedToArray","ingredient","setIngredient","_useContext","useContext","Context","store","dispatch","_useState3","_useState4","error","setError","_useState5","_useState6","imgLoaded","setImgLoaded","fetchIngrImg","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","raw","image","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","urls","small","abrupt","stop","_x","apply","this","arguments","react_default","createElement","className","onSubmit","e","preventDefault","timers","length","id","then","type","payload","catch","addIng","autoFocus","name","onChange","objectSpread","currentTarget","value","setIng","htmlFor","disabled","onClick","li","listStyleType","position","top","left","height","overflow","zIndex","imgWrapper","img","objectFit","objectPosition","Timer","time","concat","src","alt","colors","getRandColor","Math","floor","random","p","maxWidth","minWidth","& button","&:focus","& label","media","buttons","flexWrap","buttonDisabled","AddTiming","validateTimers","every","timer","undefined","map","key","dashboard_Timer","sameColor","find","t","updatedTimers","handleChange","defaultValue","filter","deleteIngr","ul","gridTemplateColumns","gridGap","justifyItems","TimerList","TimersSummary","props","dashboard_TimerList","default","counter","Counter","timerStatus","setTimerStatus","currTime","setCurrTime","vibrationPattern","useEffect","start","on","ms","window","navigator","vibrate","colorIndicator","justifySelf","timeBF","toFixed","showFormattedTime","ProgressBar","Bar","strokeWidth","ref","current","circle","Circle","duration","parseInt","easing","step","state","bar","attachment","path","setAttribute","opts","from","to","animate","React","createRef","transform","borderRadius","bottom","Dashboard","appReset","storeSortedByTime","split","timeFormatted","parseFloat","sort","b","components_Bar","components_Counter","right","initialState","appReducer","action","toConsumableArray","createContext","App","_useReducer","useReducer","_useReducer2","setState","sign","Provider","addIngredient","addTiming","timersSummary","dashboard","renderSteps","Boolean","location","hostname","match","ReactDOM","react","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0319396.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// const { UNSPLASH_API_KEY } = process.env;\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization:\r\n      \"Client-ID c1eab98eb55a7d338cc759f8ecd048f78ae4ac321f553d5d68d902a360e998f6\"\r\n  }\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../../App\";\r\nimport unsplash from \"../../axiosConfig/unsplashAPI\";\r\nimport { style, keyframes } from \"typestyle\";\r\nimport { ADD_INGR } from \"../../store/types\";\r\nconst uuidv4 = require(\"uuid/v4\");\r\n\r\ntype AddIngredientProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\n\r\nconst AddIngredient = ({ changeSteps }: AddIngredientProps): JSX.Element => {\r\n  const [ingredient, setIngredient] = useState<any>({\r\n    ingrName: \"\",\r\n    ingrImg: \"\"\r\n  });\r\n  const { store, dispatch }: any = useContext(Context);\r\n  const [error, setError] = useState(\"\");\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n\r\n  const setIng = (e: React.SyntheticEvent<HTMLInputElement>) => {\r\n    setImgLoaded(false);\r\n    setIngredient({ ...ingredient, ingrName: e.currentTarget.value });\r\n  };\r\n\r\n  const fetchIngrImg = async (ingrImg: string) => {\r\n    const raw = await unsplash.get(`/search/photos`, {\r\n      params: {\r\n        query: ingrImg\r\n      }\r\n    });\r\n\r\n    let image = raw.data.results[0].urls.small;\r\n    return image;\r\n  };\r\n\r\n  const addIng = (e: React.SyntheticEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!ingredient.ingrName) {\r\n      setImgLoaded(false);\r\n      setError(\"You have to type your ingredient first\");\r\n      return;\r\n    } else if (store.timers.length > 5) {\r\n      setError(\"You have reached maximum amount of ingredients\");\r\n      return;\r\n    }\r\n    ingredient.id = uuidv4();\r\n    fetchIngrImg(ingredient.ingrName)\r\n      .then(image => {\r\n        ingredient.ingrImg = image;\r\n      })\r\n      .then(() => {\r\n        setError(\"\");\r\n        setImgLoaded(true);\r\n        dispatch({ type: ADD_INGR, payload: ingredient });\r\n      })\r\n      .then(() => setIngredient({ ingrName: \"\", ingrImg: \"\" }))\r\n      .catch(() => {\r\n        setError(\"Ingredient is not in a base, try with another search\");\r\n        setImgLoaded(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className={container}>\r\n      <h1 className={h2}>Add Your Ingredients</h1>\r\n      <form onSubmit={e => addIng(e)} className={form}>\r\n        <input\r\n          // disabled={imgLoaded ? false : true}\r\n          autoFocus\r\n          type=\"text\"\r\n          name=\"field\"\r\n          onChange={e => setIng(e)}\r\n          value={ingredient.ingrName}\r\n        />\r\n        <label htmlFor=\"field\" className={error ? labelError : \"\"}>\r\n          {error ? error : \"Type your ingredient Here (MAX: 6)\"}\r\n        </label>\r\n        <p>(Hit enter to confirm)</p>\r\n        <button\r\n          type=\"submit\"\r\n          className={\r\n            imgLoaded\r\n              ? animatedButton\r\n              : button({ background: \"lightblue\", cursor: \"pointer\" })\r\n          }\r\n        >\r\n          {imgLoaded ? \"Ingredient Added\" : \"Add Ingredient\"}\r\n        </button>\r\n      </form>\r\n\r\n      <button\r\n        className={\r\n          store.timers.length !== 0\r\n            ? button({ background: \"lightblue\", cursor: \"pointer\" })\r\n            : button({ background: \"lightgrey\", cursor: \"default\" })\r\n        }\r\n        disabled={store.timers.length !== 0 ? false : true}\r\n        type=\"button\"\r\n        onClick={() => changeSteps(\"+\")}\r\n      >\r\n        Next Step\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst labelError = style({\r\n  color: \"red\"\r\n});\r\n\r\nconst container = style({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\"\r\n});\r\nconst form = style({\r\n  width: \"90%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  $nest: {\r\n    \"& input\": {\r\n      width: \"50%\",\r\n      background: \"rgba(0,0,0,.3)\",\r\n      fontSize: \"2rem\",\r\n      border: \"none\",\r\n      margin: \" 10px 0\",\r\n      textAlign: \"center\",\r\n      letterSpacing: \"3px\",\r\n      color: \"white\",\r\n      outline: \"none\"\r\n    }\r\n  }\r\n});\r\n\r\nconst button: any = ({ background, cursor }: any) => {\r\n  return style({\r\n    boxShadow: \"none\",\r\n    border: \"none\",\r\n    background,\r\n    color: \"#353b48\",\r\n    margin: \"20px\",\r\n    padding: \"10px\",\r\n    textTransform: \"uppercase\",\r\n    cursor,\r\n    opacity: 0.8,\r\n    $nest: {\r\n      \"&:hover\": {\r\n        opacity: 1\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst h2 = style({\r\n  padding: \"0 10px\"\r\n});\r\n\r\nconst changingButtonAnim = keyframes({\r\n  \"0%\": { background: \"lightblue\" },\r\n  \"50%\": { background: \"#33ba57\", opacity: 0.8 },\r\n  \"100%\": { background: \"#33cc57\", opacity: 1 }\r\n});\r\n\r\nconst animatedButton = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightblue\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"pointer\",\r\n  animationName: changingButtonAnim,\r\n  animationDuration: \"1.5s\",\r\n  animationIterationCount: \"1\",\r\n  animationFillMode: \"both\"\r\n});\r\n\r\nexport default AddIngredient;\r\n","export const ADD_INGR = \"ADD_INGR\";\r\nexport const ADD_TIME = \"ADD_TIME\";\r\nexport const DEL_TIME = \"DEL_TIME\";\r\n","import React from \"react\";\r\nimport { style } from \"typestyle\";\r\n\r\nconst Timer = ({ ingredient }: any): JSX.Element => {\r\n  const { ingrName, ingrImg, time } = ingredient;\r\n  return (\r\n    <li className={li}>\r\n      <h2 className={h2}>\r\n        {ingrName} {time ? `| ${time}` : \"\"}\r\n      </h2>\r\n      <div className={imgWrapper}>\r\n        <img className={img} src={ingrImg} alt=\"ingredient\" />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nconst li = style({\r\n  listStyleType: \"none\",\r\n  position: \"relative\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  width: \"300px\",\r\n  height: \"300px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  overflow: \"hidden\",\r\n  margin: \"20px auto\"\r\n});\r\n\r\nconst h2 = style({\r\n  fontSize: \"2rem\",\r\n  letterSpacing: \"2px\",\r\n  zIndex: 2,\r\n  textTransform: \"uppercase\",\r\n  color: \"white\",\r\n  background: \"rgba(0,0,0,0.2)\",\r\n  padding: \"10px\"\r\n});\r\nconst imgWrapper = style({\r\n  width: \"100%\",\r\n  position: \"absolute\"\r\n});\r\n\r\nconst img = style({\r\n  width: \"300px\",\r\n  height: \"300px\",\r\n  objectFit: \"cover\",\r\n  objectPosition: \"center\"\r\n});\r\n\r\nexport default Timer;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context, ITimer } from \"../../App\";\r\nimport { ADD_TIME, DEL_TIME } from \"../../store/types\";\r\nimport { style, media } from \"typestyle\";\r\nimport Timer from \"../dashboard/Timer\";\r\n\r\ntype AddTimingProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst colors = [\r\n  \"#00a8ff\",\r\n  \"#9c88ff\",\r\n  \"#fbc531\",\r\n  \"#4cd137\",\r\n  \"#e84118\",\r\n  \"#f5f6fa\",\r\n  \"#0097e6\",\r\n  \"#8c7ae6\",\r\n  \"#e1b12c\",\r\n  \"#e1b12c\",\r\n  \"#44bd32\",\r\n  \"#40739e\"\r\n];\r\n\r\nconst getRandColor = (): string => {\r\n  return colors[Math.floor(Math.random() * colors.length - 1) + 1];\r\n};\r\n\r\nconst AddTiming = ({ changeSteps }: AddTimingProps) => {\r\n  const { dispatch, store }: any = useContext(Context);\r\n  const [error, setError] = useState(\"\");\r\n  const handleChange = (\r\n    e: React.SyntheticEvent<HTMLInputElement>,\r\n    id: string\r\n  ) => {\r\n    if (e.currentTarget.value == \"00:00\") {\r\n      setError(\"YOU CANNOT SET YOUR TIMERS WITH TIME: 00:00\");\r\n      return;\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n    let color = getRandColor();\r\n\r\n    const sameColor = () => {\r\n      return store.timers.find((t: ITimer) => {\r\n        t.color === color;\r\n      });\r\n    };\r\n\r\n    const updatedTimers = store.timers.map((t: ITimer) => {\r\n      if (t.id === id) {\r\n        t.time = e.currentTarget.value;\r\n      }\r\n\r\n      if (!t.color) {\r\n        t.color = color;\r\n      }\r\n\r\n      sameColor ? (t.color = getRandColor()) : null;\r\n      sameColor();\r\n      return t;\r\n    });\r\n\r\n    dispatch({ type: ADD_TIME, payload: updatedTimers });\r\n  };\r\n  const deleteIngr = (e: React.SyntheticEvent, id: string) => {\r\n    const updatedTimers = store.timers.filter((t: ITimer) => t.id !== id);\r\n    dispatch({ type: DEL_TIME, payload: updatedTimers });\r\n  };\r\n  // after ingredients deletion checks if changingSteps is needed\r\n  if (store.timers.length === 0) changeSteps(\"-\");\r\n\r\n  const validateTimers = () => {\r\n    return (\r\n      store.timers.every((timer: ITimer) => timer.time !== undefined) &&\r\n      store.timers.length !== 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add Your Timings</h1>\r\n      {store.timers.map((timer: ITimer) => {\r\n        const id = timer.id;\r\n\r\n        return (\r\n          <div className={container} key={id}>\r\n            <Timer ingredient={{ ...timer }} />\r\n            <form className={form}>\r\n              <label htmlFor=\"time\">Your Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                onChange={e => handleChange(e, id)}\r\n                defaultValue={timer.time}\r\n                style={{ background: \"rgba(0,0,0,0.3)\", outline: \"none\" }}\r\n              />\r\n              <button\r\n                className={button}\r\n                style={{ color: \"#ff7777\" }}\r\n                type=\"button\"\r\n                onClick={e => deleteIngr(e, id)}\r\n              >\r\n                Delete Ingredient\r\n              </button>\r\n              <p>(Hit enter or click the 'add time' button to confirm) </p>\r\n            </form>\r\n          </div>\r\n        );\r\n      })}\r\n      {error ? (\r\n        <p className={p} style={{ color: \"#ff7777\" }}>\r\n          {error}\r\n        </p>\r\n      ) : (\r\n        <p className={p} />\r\n      )}\r\n      <div className={buttons}>\r\n        <button className={button} onClick={() => changeSteps(\"-\")}>\r\n          Prev Step\r\n        </button>\r\n        <button\r\n          disabled={!validateTimers()}\r\n          className={validateTimers() ? button : buttonDisabled}\r\n          onClick={() => changeSteps(\"+\")}\r\n        >\r\n          Next Step\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst p = style({\r\n  height: \"40px\",\r\n  padding: \"20px 0\"\r\n});\r\nconst container = style({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n});\r\n\r\nconst form = style(\r\n  {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"90vw\",\r\n    minWidth: \"50vw\",\r\n    margin: \"0 auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    background: \"rgba(0,0,0,0.2)\",\r\n\r\n    $nest: {\r\n      \"& button\": {\r\n        padding: \"15px\",\r\n        display: \"block\"\r\n      },\r\n      \"& input\": {\r\n        width: \"50%\",\r\n        fontSize: \"2rem\",\r\n        boxShadow: \"none\",\r\n        border: \"none\",\r\n        margin: \"10px auto\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        $nest: {\r\n          \"&:focus\": {\r\n            background: \"lightblue\"\r\n          }\r\n        }\r\n      },\r\n      \"& label\": {\r\n        color: \"white\"\r\n      }\r\n    }\r\n  },\r\n  media({ maxWidth: 600 }, { maxWidth: \"100%\" })\r\n);\r\nconst buttons = style({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\"\r\n});\r\n\r\nexport const button = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightblue\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"pointer\"\r\n});\r\nconst buttonDisabled = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightgrey\",\r\n  color: \"#353b48\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"default\"\r\n});\r\n\r\nexport default AddTiming;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../App\";\r\nimport Timer from \"./Timer\";\r\nimport { style } from \"typestyle\";\r\nconst TimerList: React.SFC = () => {\r\n  const { store }: any = useContext(Context);\r\n  return (\r\n    <ul className={ul}>\r\n      {store.timers.map((timer: any) => {\r\n        return <Timer key={timer.id} ingredient={timer} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nconst ul = style({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\r\n  gridGap: \"20px\",\r\n  justifyItems: \"center\"\r\n});\r\nexport default TimerList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport TimerList from \"../dashboard/TimerList\";\r\nimport { button } from \"../addTiming/index\";\r\nimport { Context, ITimer } from \"../../App\";\r\ntype TimersSummaryProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst TimersSummary = (props: TimersSummaryProps) => {\r\n  const { changeSteps } = props;\r\n  const { store }: any = useContext(Context);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const checkForTimers = () => {\r\n    const timersTimeNotFound = store.timers.find((timer: ITimer) => {\r\n      return timer.time === undefined;\r\n    });\r\n\r\n    if (timersTimeNotFound) {\r\n      setError(\"You must pick all your timers before cooking\");\r\n      return;\r\n    } else if (store.timers.length === 0) {\r\n      setError(\"You must add ingredients and timers before cooking\");\r\n      return;\r\n    } else {\r\n      setError(\"\");\r\n      changeSteps(\"+\");\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <h1>Timers Summary</h1>\r\n      <TimerList />\r\n      <button className={button} onClick={() => changeSteps(\"-\")}>\r\n        Prev Step\r\n      </button>\r\n      <button className={button} onClick={checkForTimers}>\r\n        Let's Cook\r\n      </button>\r\n      {error ? <h3 style={{ color: \"#ff7777\" }}>{error}</h3> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimersSummary;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { style } from \"typestyle\";\r\nconst Timer = require(\"tiny-timer\").default;\r\n\r\ninterface ICounterProps {\r\n  time: number;\r\n  color: string;\r\n  ingrName: string;\r\n}\r\nconst Counter = ({ time, color, ingrName }: ICounterProps): JSX.Element => {\r\n  const [timerStatus, setTimerStatus] = useState(\"\");\r\n  const [currTime, setCurrTime] = useState(time);\r\n  const timer = new Timer();\r\n\r\n  const vibrationPattern = [\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000,\r\n    1000,\r\n    3000\r\n  ];\r\n  useEffect(() => {\r\n    // Timer handler\r\n\r\n    timer.start(time * 1000, [1000]);\r\n    timer.on(\"tick\", (ms: number) => {\r\n      setCurrTime(timer.time);\r\n    });\r\n    timer.on(\"done\", () => {\r\n      setTimerStatus(\"DONE!\");\r\n      window.navigator.vibrate(vibrationPattern);\r\n    });\r\n    return () => {\r\n      timer.stop();\r\n    };\r\n  }, []);\r\n\r\n  const colorIndicator = style({\r\n    margin: \"0 10px\",\r\n    background: color,\r\n    width: \"3.8vmin\",\r\n    height: \"3vmin\"\r\n  });\r\n\r\n  const showFormattedTime = () => {\r\n    const timeBF = currTime / 1000;\r\n    const timeFormatted = `${Math.floor(timeBF / 60).toFixed(0)} min ${(\r\n      timeBF % 60\r\n    ).toFixed(0)} sec`;\r\n    return timeFormatted;\r\n  };\r\n\r\n  const stopVibrations = (): void => {\r\n    timerStatus === \"DONE!\" ? window.navigator.vibrate(0) : null;\r\n  };\r\n\r\n  const p = style({\r\n    color: color,\r\n    justifySelf: \"flex-start\",\r\n    fontSize: \"3.8vmin\",\r\n    textTransform: \"capitalize\"\r\n  });\r\n\r\n  return (\r\n    <div className={counter} onClick={stopVibrations}>\r\n      <div className={colorIndicator} />\r\n      <p className={p}>\r\n        {ingrName} : {!timerStatus ? showFormattedTime() : timerStatus}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nconst counter = style({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"1fr 8fr\",\r\n  gridGap: \"15px\",\r\n  margin: \"10px auto\",\r\n  alignItems: \"baseline\",\r\n  width: \"50vmin\"\r\n});\r\n\r\nexport default Counter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { style } from \"typestyle\";\r\nconst ProgressBar = require(\"progressbar.js\");\r\n\r\ninterface IBarProps {\r\n  color?: string;\r\n  time: string;\r\n  strokeWidth: number;\r\n  zIndex: number;\r\n}\r\nconst Bar = ({ color, time, strokeWidth, zIndex }: IBarProps): JSX.Element => {\r\n  const [barState, setBarState] = useState(\"\");\r\n  useEffect(() => {\r\n    // const timeBF = time.split(\":\");\r\n    // const timeFormatted = parseInt(timeBF[0]) * 60 + parseInt(timeBF[1]);\r\n    if (ref.current) {\r\n      const circle = new ProgressBar.Circle(ref.current, {\r\n        duration: parseInt(time) * 1000,\r\n        easing: \"linear\",\r\n        strokeWidth: strokeWidth,\r\n        step: function(state: any, bar: any, attachment: any) {\r\n          bar.path.setAttribute(\"stroke\", state.color);\r\n        }\r\n      });\r\n\r\n      const opts = {\r\n        from: { color: color },\r\n        to: { color: color }\r\n      };\r\n\r\n      circle.animate(1, opts);\r\n    }\r\n  }, []);\r\n\r\n  const ref: any = React.createRef();\r\n\r\n  const bar = style({\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    width: \"90vmin\",\r\n    height: \"90vmin\",\r\n    zIndex: zIndex,\r\n    boxShadow: \"0 0 3px 3px rgba(255,255,255,0.2)\",\r\n    borderRadius: \"50%\"\r\n  });\r\n\r\n  return <div ref={ref} className={bar} />;\r\n};\r\n\r\nexport default Bar;\r\n","import React, { useContext } from \"react\";\r\nimport { style } from \"typestyle\";\r\nimport Counter from \"../Counter\";\r\nimport Bar from \"../Bar\";\r\nimport { Context, ITimer } from \"../../App\";\r\nimport { button } from \"../addTiming\";\r\n\r\nconst Dashboard = ({ appReset }: { appReset: () => void }) => {\r\n  const { store }: any = useContext(Context);\r\n  let strokeWidth = 1;\r\n  let zIndex = 10;\r\n\r\n  // splitting time input from mins:secs to secs in order to pass it to timer functions\r\n  const timers = store.timers.map((timer: any) => {\r\n    const timeBF = timer.time.split(\":\");\r\n    const timeFormatted = parseFloat(timeBF[0]) * 60 + parseFloat(timeBF[1]);\r\n    return { ...timer, time: timeFormatted };\r\n  });\r\n\r\n  let storeSortedByTime = timers.sort((a: ITimer, b: ITimer) => {\r\n    return parseInt(a.time) > parseInt(b.time) ? 1 : -1;\r\n  });\r\n  return (\r\n    <div>\r\n      <div className={container}>\r\n        {storeSortedByTime.map(({ id, time, color }: ITimer) => {\r\n          return (\r\n            <Bar\r\n              key={id}\r\n              time={time}\r\n              strokeWidth={(strokeWidth += 2)}\r\n              zIndex={zIndex--}\r\n              color={color}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={container}>\r\n        {storeSortedByTime.map((timer: any) => {\r\n          return (\r\n            <Counter\r\n              key={timer.id}\r\n              time={timer.time}\r\n              ingrName={timer.ingrName}\r\n              color={timer.color}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        onClick={appReset}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"5%\",\r\n          right: \"5%\",\r\n          padding: \"10px 15px\"\r\n        }}\r\n        className={button}\r\n      >\r\n        Go Back To Main Panel\r\n      </button>\r\n      <p className={p}>(When done, tap on the ingredient to stop vibrations)</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst container = style({\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\",\r\n  width: \"50%\",\r\n  height: \"auto\"\r\n});\r\nconst p = style({\r\n  position: \"fixed\",\r\n  bottom: \"5%\",\r\n  left: \"50%\",\r\n  transform: \"translateX(-50%)\"\r\n});\r\nexport default Dashboard;\r\n","import { IAction } from \"../App\";\r\nimport { ITimer } from \"../App\";\r\nimport { ADD_INGR, ADD_TIME, DEL_TIME } from \"./types\";\r\nexport const initialState = {\r\n  timers: <ITimer | any>[]\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ADD_INGR:\r\n      return { ...state, timers: [...state.timers, action.payload] };\r\n    case ADD_TIME:\r\n      return { ...state, timers: action.payload };\r\n    case DEL_TIME:\r\n      return { ...state, timers: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useReducer, SetStateAction } from \"react\";\nimport AddIngredient from \"./components/addIngredient\";\nimport AddTiming from \"./components/addTiming\";\nimport TimersSummary from \"./components/timersSummary\";\nimport Dashboard from \"./components/dashboard\";\nimport { appReducer, initialState } from \"./store/appReducer\";\nimport \"./App.css\";\n\nexport interface ITimer {\n  time: string;\n  ingrName: string;\n  ingrImg: string;\n  id: string;\n  color?: string;\n}\n\ninterface IAppState {\n  timers: ITimer[];\n  step: number;\n}\nexport interface IAction {\n  type: string;\n  payload: any;\n}\n\nexport const Context = React.createContext({});\n\nconst App = (): JSX.Element => {\n  const [store, dispatch] = useReducer(appReducer, initialState);\n  const [state, setState] = useState({ step: 1, timers: [] });\n  const { step } = state;\n\n  const appReset = () => {\n    window.navigator.vibrate(0);\n    setState({ timers: [], step: 1 });\n  };\n\n  const changeSteps = (sign: string): void => {\n    sign === \"+\"\n      ? setState(\n          (state: IAppState): any => ({\n            step: step + 1\n          })\n        )\n      : setState(\n          (state: IAppState): any => ({\n            step: step - 1\n          })\n        );\n  };\n\n  const renderSteps = (): JSX.Element => {\n    switch (step) {\n      case 1: {\n        return <AddIngredient changeSteps={changeSteps} />;\n      }\n      case 2: {\n        return <AddTiming changeSteps={changeSteps} />;\n      }\n      case 3: {\n        return <TimersSummary changeSteps={changeSteps} />;\n      }\n      case 4: {\n        return <Dashboard appReset={appReset} />;\n      }\n      default: {\n        return <AddIngredient changeSteps={changeSteps} />;\n      }\n    }\n  };\n\n  return (\n    <Context.Provider value={{ dispatch, store }}>\n      <div className=\"App\">\n        {step === 4 ? null : (\n          <header className=\"App-header\">\n            <p>Kitchen Helper</p>\n            <p>Precise Your Kitchen Timing </p>\n            <h4>Step {step}</h4>\n          </header>\n        )}\n        {renderSteps()}\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["axiosConfig/unsplashAPI.js","components/dashboard/Timer.tsx","components/addTiming/index.tsx","components/addIngredient/index.tsx","components/dashboard/TimerList.tsx","components/timersSummary/index.tsx","components/Counter/index.tsx","components/Bar/index.tsx","components/dashboard/index.tsx","store/appReducer.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["axios","create","baseURL","headers","Authorization","li","style","listStyleType","position","top","left","width","height","display","flexDirection","alignItems","justifyContent","overflow","margin","h2","fontSize","letterSpacing","zIndex","textTransform","color","background","padding","img","maxWidth","Timer","_ref","ingredient","ingrName","ingrImg","time","react_default","a","createElement","className","concat","src","alt","colors","container","form","$nest","& button","& input","boxShadow","border","textAlign","&:focus","& label","media","buttons","flexWrap","button","&--red","AddTiming","props","_useContext","useContext","Context","dispatch","store","_useState","useState","timeValue","_useState2","Object","slicedToArray","setTime","changeSteps","handleSubmit","e","id","preventDefault","updatedTimers","timers","map","t","Math","floor","random","length","type","payload","timer","key","dashboard_Timer","objectSpread","onSubmit","htmlFor","min","name","onChange","currentTarget","value","handleChange","defaultValue","onClick","filter","deleteIngr","uuidv4","require","labelError","outline","AddIngredient","setIngredient","_useState3","_useState4","error","setError","fetchIngrImg","_ref2","asyncToGenerator","regenerator_default","mark","_callee","raw","image","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","urls","small","abrupt","stop","_x","apply","this","arguments","then","catch","err","console","addIng","setIng","TimerList","TimersSummary","dashboard_TimerList","default","Counter","timerStatus","setTimerStatus","currTime","setCurrTime","useEffect","start","on","ms","colorIndicator","gridTemplateColumns","gridGap","justifySelf","toFixed","ProgressBar","Bar","strokeWidth","ref","current","circle","Circle","duration","easing","step","state","bar","attachment","path","setAttribute","opts","from","to","animate","React","createRef","transform","borderRadius","Dashboard","storeSortedByTime","sort","b","parseInt","log","components_Bar","components_Counter","initialState","appReducer","undefined","action","toConsumableArray","createContext","App","_useReducer","useReducer","_useReducer2","setState","sign","Provider","addIngredient","addTiming","timersSummary","dashboard","renderSteps","Boolean","window","location","hostname","match","ReactDOM","react","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d58ad70.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// const { UNSPLASH_API_KEY } = process.env;\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization:\r\n      \"Client-ID c1eab98eb55a7d338cc759f8ecd048f78ae4ac321f553d5d68d902a360e998f6\"\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport { style } from \"typestyle\";\r\n\r\nconst Timer = ({ ingredient }: any): JSX.Element => {\r\n  const { ingrName, ingrImg, time } = ingredient;\r\n  return (\r\n    <li className={li}>\r\n      <h2 className={h2}>\r\n        {ingrName} {time ? `| ${time}` : \"\"}\r\n      </h2>\r\n      <img className={img} src={ingrImg} alt=\"ingredient\" />\r\n    </li>\r\n  );\r\n};\r\nconst li = style({\r\n  listStyleType: \"none\",\r\n  position: \"relative\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  width: \"300px\",\r\n  height: \"300px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  overflow: \"hidden\",\r\n  margin: \"20px auto\"\r\n});\r\n\r\nconst h2 = style({\r\n  fontSize: \"2rem\",\r\n  letterSpacing: \"2px\",\r\n  zIndex: 2,\r\n  textTransform: \"uppercase\",\r\n  color: \"white\",\r\n  background: \"rgba(0,0,0,0.2)\",\r\n  padding: \"10px\"\r\n});\r\n\r\nconst img = style({\r\n  position: \"absolute\",\r\n  width: \"100%\",\r\n  maxWidth: \"300px\"\r\n});\r\n\r\nexport default Timer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../../App\";\r\n\r\nimport { style, media } from \"typestyle\";\r\nimport Timer from \"../dashboard/Timer\";\r\ntype AddTimingProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst colors = [\r\n  \"#00a8ff\",\r\n  \"#9c88ff\",\r\n  \"#fbc531\",\r\n  \"#4cd137\",\r\n  \"#e84118\",\r\n  \"#f5f6fa\",\r\n  \"#0097e6\",\r\n  \"#8c7ae6\",\r\n  \"#e1b12c\",\r\n  \"#e1b12c\",\r\n  \"#44bd32\",\r\n  \"#40739e\"\r\n];\r\n\r\nconst getRandColor = (): string => {\r\n  return colors[Math.floor(Math.random() * colors.length - 1) + 1];\r\n};\r\n\r\nconst AddTiming = (props: AddTimingProps) => {\r\n  const { dispatch, store }: any = useContext(Context);\r\n  const [time, setTime] = useState({ timeValue: \"\" });\r\n  const { changeSteps } = props;\r\n\r\n  const handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\r\n    setTime({ timeValue: e.currentTarget.value });\r\n  };\r\n  const handleSubmit = (\r\n    e: React.SyntheticEvent<HTMLFormElement>,\r\n    id: string\r\n  ) => {\r\n    e.preventDefault();\r\n    const updatedTimers = store.timers.map((t: any) => {\r\n      if (t.id === id) {\r\n        t.time = time.timeValue;\r\n        t.color = getRandColor();\r\n      }\r\n      return t;\r\n    });\r\n\r\n    dispatch({ type: \"ADD_TIME\", payload: updatedTimers });\r\n  };\r\n  const deleteIngr = (e: any, id: string) => {\r\n    const updatedTimers = store.timers.filter((t: any) => t.id !== id);\r\n    dispatch({ type: \"DEL_TIME\", payload: updatedTimers });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Add Your Timings</h1>\r\n      {store.timers.map((timer: any) => {\r\n        const id = timer.id;\r\n        return (\r\n          <div className={container} key={id}>\r\n            <Timer ingredient={{ ...timer }} />\r\n            <form className={form} onSubmit={e => handleSubmit(e, id)}>\r\n              <label htmlFor=\"time\">Your Time:</label>\r\n              <input\r\n                min=\"0\"\r\n                type=\"number\"\r\n                name=\"time\"\r\n                onChange={e => handleChange(e)}\r\n                defaultValue={timer.time}\r\n              />\r\n              <button className={button} type=\"submit\">\r\n                Add Time\r\n              </button>\r\n              <button\r\n                className={button}\r\n                style={{ color: \"red\" }}\r\n                type=\"button\"\r\n                onClick={e => deleteIngr(e, id)}\r\n              >\r\n                Delete Ingredient\r\n              </button>\r\n            </form>\r\n          </div>\r\n        );\r\n      })}\r\n      <div className={buttons}>\r\n        <button className={button} onClick={() => changeSteps(\"-\")}>\r\n          Prev Step\r\n        </button>\r\n        <button className={button} onClick={() => changeSteps(\"+\")}>\r\n          Next Step\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst container = style({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n});\r\n\r\nconst form = style(\r\n  {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"90vw\",\r\n    margin: \"0 auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    background: \"rgba(0,0,0,0.2)\",\r\n\r\n    $nest: {\r\n      \"& button\": {\r\n        padding: \"15px\",\r\n        display: \"block\"\r\n      },\r\n      \"& input\": {\r\n        width: \"50%\",\r\n        background: \"none\",\r\n        fontSize: \"2rem\",\r\n        boxShadow: \"none\",\r\n        border: \"none\",\r\n        margin: \" 10px 0\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        $nest: {\r\n          \"&:focus\": {\r\n            background: \"lightblue\"\r\n          }\r\n        }\r\n      },\r\n      \"& label\": {\r\n        color: \"white\"\r\n      }\r\n    }\r\n  },\r\n  media({ maxWidth: 600 }, { maxWidth: \"100%\" })\r\n);\r\nconst buttons = style({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\"\r\n});\r\n\r\nexport const button = style({\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  background: \"lightblue\",\r\n  color: \"white\",\r\n  margin: \"20px\",\r\n  padding: \"10px\",\r\n  textTransform: \"uppercase\",\r\n  $nest: {\r\n    \"&--red\": {\r\n      color: \"red\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default AddTiming;\r\n","import React, { useState, useContext } from \"react\";\r\nconst uuidv4 = require(\"uuid/v4\");\r\nimport { Context } from \"../../App\";\r\nimport unsplash from \"../../axiosConfig/unsplashAPI\";\r\nimport { button } from \"../addTiming/index\";\r\nimport { style } from \"typestyle\";\r\ntype AddIngredientProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\n\r\nconst AddIngredient = ({ changeSteps }: AddIngredientProps): JSX.Element => {\r\n  const [ingredient, setIngredient] = useState<any>({\r\n    ingrName: \"\",\r\n    ingrImg: \"\"\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const { dispatch }: any = useContext(Context);\r\n\r\n  const setIng = (e: React.SyntheticEvent<HTMLInputElement>) => {\r\n    setIngredient({ ...ingredient, ingrName: e.currentTarget.value });\r\n  };\r\n\r\n  const fetchIngrImg = async (ingrImg: string) => {\r\n    const raw = await unsplash.get(`/search/photos`, {\r\n      params: {\r\n        query: ingrImg\r\n      }\r\n    });\r\n\r\n    let image = raw.data.results[0].urls.small;\r\n    return image;\r\n  };\r\n\r\n  const addIng = (e: React.SyntheticEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    ingredient.id = uuidv4();\r\n\r\n    fetchIngrImg(ingredient.ingrName)\r\n      .then(image => {\r\n        ingredient.ingrImg = image;\r\n      })\r\n      .then(() => {\r\n        setError(\"\");\r\n        dispatch({ type: \"ADD_INGR\", payload: ingredient });\r\n      })\r\n      .then(() => setIngredient({ ingrName: \"\", ingrImg: \"\" }))\r\n      .catch(err => {\r\n        console.error(err);\r\n        setError(\"Ingredient is not in a base, try with another search\");\r\n      });\r\n  };\r\n  return (\r\n    <div className={container}>\r\n      <h1 className={h2}>Add Your Ingredients</h1>\r\n      <form onSubmit={e => addIng(e)} className={form}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"field\"\r\n          onChange={e => setIng(e)}\r\n          value={ingredient.ingrName}\r\n        />\r\n        <label htmlFor=\"field\" className={error ? labelError : \"\"}>\r\n          {error ? error : \"Type you ingredient Here\"}\r\n        </label>\r\n      </form>\r\n\r\n      <button className={button} type=\"button\" onClick={() => changeSteps(\"+\")}>\r\n        Next Step\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst labelError = style({\r\n  color: \"red\"\r\n});\r\n\r\nconst container = style({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\"\r\n});\r\nconst form = style({\r\n  width: \"90%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  $nest: {\r\n    \"& input\": {\r\n      width: \"50%\",\r\n      background: \"rgba(0,0,0,.3)\",\r\n      fontSize: \"2rem\",\r\n      border: \"none\",\r\n      margin: \" 10px 0\",\r\n      textAlign: \"center\",\r\n      letterSpacing: \"3px\",\r\n      color: \"white\",\r\n      outline: \"none\"\r\n    }\r\n  }\r\n});\r\n\r\nconst h2 = style({\r\n  padding: \"0 10px\"\r\n});\r\n\r\nexport default AddIngredient;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../App\";\r\nimport Timer from \"./Timer\";\r\nconst TimerList: React.SFC = () => {\r\n  const { store }: any = useContext(Context);\r\n  return (\r\n    <ul>\r\n      {store.timers.map((timer: any) => {\r\n        return <Timer key={timer.id} ingredient={timer} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TimerList;\r\n","import React from \"react\";\r\nimport TimerList from \"../dashboard/TimerList\";\r\nimport { button } from \"../addTiming/index\";\r\n\r\ntype TimersSummaryProps = {\r\n  changeSteps: (sign: string) => void;\r\n};\r\nconst TimersSummary = (props: TimersSummaryProps) => {\r\n  const { changeSteps } = props;\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <h1>TimersSummary</h1>\r\n      <TimerList />\r\n      <button className={button} onClick={() => changeSteps(\"-\")}>\r\n        Prev Step\r\n      </button>\r\n      <button className={button} onClick={() => changeSteps(\"+\")}>\r\n        Let's Cook\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimersSummary;\r\n","import React, { useEffect, useState } from \"react\";\r\nconst Timer = require(\"tiny-timer\").default;\r\n\r\nimport { style } from \"typestyle\";\r\n\r\ninterface ICounterProps {\r\n  time: number;\r\n  color: string;\r\n  ingrName: string;\r\n}\r\nconst Counter = ({ time, color, ingrName }: ICounterProps): JSX.Element => {\r\n  const [timerStatus, setTimerStatus] = useState(\"\");\r\n  const [currTime, setCurrTime] = useState(0);\r\n  const timer = new Timer();\r\n\r\n  useEffect(() => {\r\n    // Timer handler\r\n\r\n    timer.start(time * 1000, [1000]);\r\n    timer.on(\"tick\", (ms: number) => {\r\n      setCurrTime(timer.time);\r\n    });\r\n    timer.on(\"done\", () => {\r\n      setTimerStatus(\"DONE!\");\r\n    });\r\n  }, []);\r\n\r\n  const colorIndicator = style({\r\n    margin: \"0 10px\",\r\n    background: color,\r\n    width: \"15px\",\r\n    height: \"10px\"\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"4fr 1fr\",\r\n        gridGap: \"15px\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          color: color,\r\n          justifySelf: \"flex-start\",\r\n          fontSize: \"0.8rem\"\r\n        }}\r\n      >\r\n        {ingrName} : {!timerStatus ? (currTime / 1000).toFixed(0) : timerStatus}\r\n      </p>\r\n      <div className={colorIndicator} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { style } from \"typestyle\";\r\nconst ProgressBar = require(\"progressbar.js\");\r\n\r\ninterface IBarProps {\r\n  color: string;\r\n  time: number;\r\n  strokeWidth: number;\r\n  zIndex: number;\r\n}\r\nconst Bar = ({ color, time, strokeWidth, zIndex }: IBarProps): JSX.Element => {\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      const circle = new ProgressBar.Circle(ref.current, {\r\n        duration: time * 1000,\r\n        easing: \"linear\",\r\n        strokeWidth: strokeWidth,\r\n        step: function(state: any, bar: any, attachment: any) {\r\n          bar.path.setAttribute(\"stroke\", state.color);\r\n        }\r\n      });\r\n\r\n      const opts = {\r\n        from: { color: color },\r\n        to: { color: color }\r\n      };\r\n\r\n      circle.animate(1, opts);\r\n    }\r\n  }, []);\r\n\r\n  const ref: any = React.createRef();\r\n\r\n  const bar = style({\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    width: \"90vmin\",\r\n    height: \"90vmin\",\r\n    zIndex: zIndex,\r\n    boxShadow: \"0 0 3px 3px rgba(255,255,255,0.2)\",\r\n    borderRadius: \"50%\"\r\n  });\r\n\r\n  return <div ref={ref} className={bar} />;\r\n};\r\n\r\nexport default Bar;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n// import Timer from \"../dashboard/Timer\";\r\nimport Counter from \"../Counter\";\r\nimport Bar from \"../Bar\";\r\nimport { Context } from \"../../App\";\r\n\r\nconst Dashboard = () => {\r\n  const { store }: any = useContext(Context);\r\n  let strokeWidth = 1;\r\n  let zIndex = 10;\r\n  let storeSortedByTime = store.timers.sort((a: any, b: any) => {\r\n    return parseInt(a.time) > parseInt(b.time) ? 1 : -1;\r\n  });\r\n  console.log(storeSortedByTime);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%,-50%)\",\r\n          width: \"50%\",\r\n          height: \"auto\"\r\n        }}\r\n      >\r\n        {storeSortedByTime.map((timer: any) => {\r\n          return (\r\n            <Bar\r\n              key={timer.id}\r\n              time={timer.time}\r\n              strokeWidth={(strokeWidth += 2)}\r\n              zIndex={zIndex--}\r\n              color={timer.color}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%,-50%)\",\r\n          width: \"50%\",\r\n          height: \"auto\"\r\n        }}\r\n      >\r\n        {storeSortedByTime.map((timer: any) => {\r\n          return (\r\n            <Counter\r\n              key={timer.id}\r\n              time={timer.time}\r\n              ingrName={timer.ingrName}\r\n              color={timer.color}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { IAction } from \"../App\";\r\nimport { ITimer } from \"../App\";\r\nexport const initialState = {\r\n  timers: <ITimer | any>[]\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case \"ADD_INGR\":\r\n      return { ...state, timers: [...state.timers, action.payload] };\r\n    case \"ADD_TIME\":\r\n      return { ...state, timers: action.payload };\r\n    case \"DEL_TIME\":\r\n      return { ...state, timers: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useReducer } from \"react\";\nimport AddIngredient from \"./components/addIngredient\";\nimport AddTiming from \"./components/addTiming\";\nimport TimersSummary from \"./components/timersSummary\";\nimport Dashboard from \"./components/dashboard\";\nimport { appReducer, initialState } from \"./store/appReducer\";\nimport \"./App.css\";\n\nexport interface ITimer {\n  time: string;\n  ingrName: string;\n  ingrImg: string;\n  id: string;\n  color?: string;\n}\n\ninterface IAppState {\n  timers: ITimer[];\n  step: number;\n}\nexport interface IAction {\n  type: string;\n  payload: any;\n}\n\nexport const Context = React.createContext({});\n\nconst App = (): JSX.Element => {\n  const [store, dispatch] = useReducer(appReducer, initialState);\n  const [state, setState] = useState({ step: 1, timers: [] });\n  const { step } = state;\n  const changeSteps = (sign: string): void => {\n    sign === \"+\"\n      ? setState(\n          (state: IAppState): any => ({\n            step: step + 1\n          })\n        )\n      : setState(\n          (state: IAppState): any => ({\n            step: step - 1\n          })\n        );\n  };\n\n  const renderSteps = () => {\n    switch (step) {\n      case 1: {\n        return <AddIngredient changeSteps={changeSteps} />;\n      }\n      case 2: {\n        return <AddTiming changeSteps={changeSteps} />;\n      }\n      case 3: {\n        return <TimersSummary changeSteps={changeSteps} />;\n      }\n      case 4: {\n        return <Dashboard />;\n      }\n      default: {\n        return <AddIngredient changeSteps={changeSteps} />;\n      }\n    }\n  };\n\n  return (\n    <Context.Provider value={{ dispatch, store }}>\n      <div className=\"App\">\n        {step === 4 ? null : (\n          <header className=\"App-header\">\n            <p>Kitchen Helper</p>\n            <p>Precise Your Kitchen Timing </p>\n            <h2>Step {step}</h2>\n          </header>\n        )}\n        {renderSteps()}\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}